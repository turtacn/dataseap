apiVersion: v1
kind: Service
metadata:
  name: dataseap-server-svc
  namespace: dataseap # Optional: specify a namespace, should match Deployment's namespace
  labels:
    app: dataseap-server
    component: api-server
    tier: backend
spec:
  type: ClusterIP # Default type, exposes the service on an internal IP in the cluster.
  # Use LoadBalancer for external access if on a cloud provider, or NodePort for testing.
  # type: LoadBalancer
  # type: NodePort
  selector:
    app: dataseap-server # Must match the labels of the Pods in the Deployment
    component: api-server
  ports:
    - name: http
      protocol: TCP
      port: 80 # Port on which the service is exposed
      targetPort: http # Name of the port in the Pod spec (or port number 8080)
    - name: grpc
      protocol: TCP
      port: 50051 # Port on which the service is exposed
      targetPort: grpc # Name of the port in the Pod spec (or port number 50051)

# Example for NodePort (for testing, exposes on each Node's IP at a static port)
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: dataseap-server-nodeport-svc
#   namespace: dataseap
# spec:
#   type: NodePort
#   selector:
#     app: dataseap-server
#   ports:
#     - name: http
#       protocol: TCP
#       port: 80
#       targetPort: 8080
#       nodePort: 30080 # Example static port (usually in range 30000-32767)
#     - name: grpc
#       protocol: TCP
#       port: 50051
#       targetPort: 50051
#       nodePort: 30051 # Example static port